generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  email        String   @unique
  passwordHash String
  role         Role     @default(USER)
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")
  Admin        Admin?
  Expert       Expert?
}

enum Role {
  ADMIN
  USER
}

model Admin {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @default(now()) @map("updatedAt")
}

model Expert {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id])
  bio       String?
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @default(now()) @map("updatedAt")
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("createdAt")
  updatedAt   DateTime @default(now()) @map("updatedAt")
  Tool        Tool[]
}

model Tool {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  companyId   Int
  Company     Company  @relation(fields: [companyId], references: [id])
  createdAt   DateTime @default(now()) @map("createdAt")
  updatedAt   DateTime @default(now()) @map("updatedAt")
}

model News {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  author    String?
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @default(now()) @map("updatedAt")
}