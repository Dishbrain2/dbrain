generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  username     String   @unique
  email        String   @unique
  passwordHash String
  role         Role     @default(USER)
  status       String?  @default("PENDING") // Added status field
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")
  Admin        Admin?
  Expert       Expert?

  @@map("users")
}

enum Role {
  ADMIN
  USER
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  
  @@map("admins")
}

model Expert {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  userId          String            @unique @db.ObjectId
  User            User              @relation(fields: [userId], references: [id])
  bio             String?
  title           String?
  company         String?
  companyId       String?
  website         String?
  linkedin        String?
  twitter         String?
  specializations String[]
  education       Education[]
  publications    Publication[]
  projects        Project[]
  createdAt       DateTime          @default(now()) @map("createdAt")
  updatedAt       DateTime          @updatedAt @map("updatedAt")
  
  @@map("experts")
}

type Education {
  degree      String
  institution String
  year        String
}

type Publication {
  title String
  venue String
  year  String
}

type Project {
  name        String
  description String
}

model Company {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("createdAt")
  updatedAt   DateTime @updatedAt @map("updatedAt")
  Tool        Tool[]
  
  @@map("companies")
}

model Tool {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  companyId   String   @db.ObjectId
  Company     Company  @relation(fields: [companyId], references: [id])
  createdAt   DateTime @default(now()) @map("createdAt")
  updatedAt   DateTime @updatedAt @map("updatedAt")
  
  @@map("tools")
}

model News {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  author    String?
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  
  @@map("news")
}
